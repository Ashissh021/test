<html>
 <script src="http://code.jquery.com/jquery-1.11.3.min.js"></script>
<script src="http://code.jquery.com/jquery-1.10.2.min.js" type="text/javascript"></script>  
<script src="https://cdnjs.cloudflare.com/ajax/libs/xlsx/0.7.7/xlsx.core.min.js"></script>  
<script src="https://cdnjs.cloudflare.com/ajax/libs/xls/0.7.4-a/xls.core.min.js"></script>
	<!-- Ignite UI Required Combined CSS Files -->
    <link type="text/javascript" src="http://cdn-na.infragistics.com/igniteui/2017.2/latest/css/themes/infragistics/infragistics.theme.css" rel="stylesheet" />
    <link type="text/javascript" src="http://cdn-na.infragistics.com/igniteui/2017.2/latest/css/structure/infragistics.css" rel="stylesheet" />

    <script type="text/javascript" src="http://ajax.aspnetcdn.com/ajax/modernizr/modernizr-2.8.3.js"></script>
    <script type="text/javascript" src="http://code.jquery.com/jquery-1.11.3.min.js"></script>
    <script type="text/javascript" src="http://code.jquery.com/ui/1.11.1/jquery-ui.min.js"></script>

    <!-- Ignite UI Required Combined JavaScript Files -->
    <script type="text/javascript" src="http://cdn-na.infragistics.com/igniteui/2017.2/latest/js/infragistics.core.js"></script>
    <script type="text/javascript" src="http://cdn-na.infragistics.com/igniteui/2017.2/latest/js/infragistics.dv.js"></script>
	 <script type="text/javascript" src="https://www.igniteui.com/data-files/world-energy-production.js">    </script>
<script>
function ExportToTable() {  
     var regex = /^([a-zA-Z0-9\s_\\.\-:])+(.xlsx|.xls)$/;  
     /*Checks whether the file is a valid excel file*/  
     if (regex.test($("#excelfile").val().toLowerCase())) {  
         var xlsxflag = false; /*Flag for checking whether excel is .xls format or .xlsx format*/  
         if ($("#excelfile").val().toLowerCase().indexOf(".xlsx") > 0) {  
             xlsxflag = true;  
         }  
         /*Checks whether the browser supports HTML5*/  
         if (typeof (FileReader) != "undefined") {  
             var reader = new FileReader();  
             reader.onload = function (e) {  
                 var data = e.target.result;  
                 /*Converts the excel data in to object*/  
                 if (xlsxflag) {  
                     var workbook = XLSX.read(data, { type: 'binary' });  
                 }  
                 else {  
                     var workbook = XLS.read(data, { type: 'binary' });  
                 }  
                 /*Gets all the sheetnames of excel in to a variable*/  
                 var sheet_name_list = workbook.SheetNames;  
  
                 var cnt = 0; /*This is used for restricting the script to consider only first sheet of excel*/  
                 sheet_name_list.forEach(function (y) { /*Iterate through all sheets*/  
                     /*Convert the cell value to Json*/  
                     if (xlsxflag) {  
                         var exceljson = XLSX.utils.sheet_to_json(workbook.Sheets[y]);  
                     }  
                     else {  
                         var exceljson = XLS.utils.sheet_to_row_object_array(workbook.Sheets[y]);  
                     }  
                     if (exceljson.length > 0 && cnt == 0) {  
                         BindTable(exceljson, '#exceltable');  
                         cnt++;  
                     }  
                 });  
                 $('#exceltable').show();  
             }  
             if (xlsxflag) {/*If excel file is .xlsx extension than creates a Array Buffer from excel*/  
                 reader.readAsArrayBuffer($("#excelfile")[0].files[0]);  
             }  
             else {  
                 reader.readAsBinaryString($("#excelfile")[0].files[0]);  
             }  
         }  
         else {  
             alert("Sorry! Your browser does not support HTML5!");  
         }  
     }  
     else {  
         alert("Please upload a valid Excel file!");  
     }  
 } 
function BindTable(jsondata, tableid) {/*Function used to convert the JSON array to Html Table*/  
     var columns = BindTableHeader(jsondata, tableid); /*Gets all the column headings of Excel*/  
	 var data = [],  CountryPopulation = [];
	 
	 
	 
     for (var i = 0; i < jsondata.length; i++) {  
         var row$ = $('<tr/>');  
		newRow = {};
         for (var colIndex = 0; colIndex < columns.length; colIndex++) {  
             var cellValue = jsondata[i][columns[colIndex]];  
			 alert(cellValue);
			 newRow[jsondata[i][columns[colIndex]]] = cellValue;
			 data.push(cellValue);
			
             if (cellValue == null)  
                 cellValue = "";  
             row$.append($('<td/>').html(cellValue));  
         }
		 data.push(newRow);
		 alert(data);
         $(tableid).append(row$);  
     }  
	createChart(data)
 }  
 
 function BindTableHeader(jsondata, tableid) {/*Function used to get all column names from JSON and bind the html table header*/  
     var columnSet = [];  
     var headerTr$ = $('<tr/>');  
	 
     for (var i = 0; i < jsondata.length; i++) {  
         var rowHash = jsondata[i];  
		 
         for (var key in rowHash) {  
			
             if (rowHash.hasOwnProperty(key)) {  
                 if ($.inArray(key, columnSet) == -1) {/*Adding each unique column names to a variable array*/  
                     columnSet.push(key);  
                     headerTr$.append($('<th/>').html(key));  
                 }  
             }  
         }  
     }  
     $(tableid).append(headerTr$);  
     return columnSet;  
 }  
 function createChart(data){
			
			if ($("#chart").data("igDataChart") !== undefined) {
                $("#chart").igDataChart("destroy");
            }
			$("#chart").igDataChart({
					dataSource: everyThreeYears,
					width: "450px",
					height: "450px",
					title: "Energy Production Per Country",
					subtitle: "The top three Total Primary Energy producers",
					horizontalZoomable: true,
					verticalZoomable: true,
					axes: [{
						type: "categoryX",
						name: "xAxis",
						label: "Year",
						strokeThickness: 5,
						title: "Year"
					}, {
						type: "numericY",
						name: "prodPower",
						minimumValue: 0,
						maximumValue: 100,
						strokeThickness: 5,
						title: "Quadrillion Btu"
					}, {
						type: "numericY",
						name: "totalPower",
						minimumValue: 50,
						maximumValue: 250,
						labelLocation: "outsideRight",
						title: "Quadrillion Btu",
					}],
					series: [{
						type: "column",
						isHighlightingEnabled: true,
						isTransitionInEnabled: true,
						name: "China",
						title: "China",
						xAxis: "xAxis",
						yAxis: "prodPower",
						valueMemberPath: "China",
						showTooltip: true,
						tooltipTemplate: "tooltipChina",
						legend: { element: "legend" }
					}, {
						type: "column",
						isHighlightingEnabled: true,
						isTransitionInEnabled: true,
						name: "UnitedStates",
						title: "US",
						xAxis: "xAxis",
						yAxis: "prodPower",
						valueMemberPath: "UnitedStates",
						showTooltip: true,
						tooltipTemplate: "tooltipUS",
						legend: { element: "legend" }
					}, {
						type: "column",
						isHighlightingEnabled: true,
						isTransitionInEnabled: true,
						name: "Russia",
						title: "Russia",
						xAxis: "xAxis",
						yAxis: "prodPower",
						valueMemberPath: "Russia",
						showTooltip: true,
						tooltipTemplate: "tooltipRussia",
						legend: { element: "legend" }
					}, {
						type: "line",
						isHighlightingEnabled: true,
						isTransitionInEnabled: true,
						name: "Total",
						title: "Total Energy",
						xAxis: "xAxis",
						yAxis: "totalPower",
						valueMemberPath: "Total",
						brush: "Orange",
						showTooltip: true,
						tooltipTemplate: "tooltipTotal",
						legend: { element: "legend2" }
					}],
					leftMargin: 5,
					topMargin: 15
				});
			}
</script>
<input type="file" id="excelfile" /> 
 
   <input type="button" id="viewfile" value="Export To Table" onclick="ExportToTable()" />  
      <br />  
      <br />  
   <table id="exceltable">  
</table>
</html>
